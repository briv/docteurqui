@use "sass:color";
@use '@docteurqui/common/index.scss' as dq-common;

@import 'normalize.css/normalize.css';
@import 'tiny-date-picker/tiny-date-picker.css';
// Fonts
@import '@docteurqui/fonts/index.css';
// END Fonts

// Colors
@import 'vars.scss';

// General styles
.d-flex {
    display: flex;
}

.w-100 {
    width: 100%;
}

.h-100 {
    height: 100%;
}

.text-bold {
    font-weight: bold;
}

.flex-column {
    flex-direction: column;
}
.flex-row {
    flex-direction: row;
}

.hidden {
    visibility: hidden;
}

@mixin focused {
    outline: 0;
    box-shadow: 0 0 0 3px $focused-color!important;
}

@mixin focused-invalid {
    outline: 0;
    box-shadow: 0 0 0 3px $invalid-focused-color!important;
}

@mixin button-like {
    background-color: $button-bg-color;
    border: 2px solid;
    border-radius: 8px;
    border-color: $button-border-color;
    padding: 0.8em 0.2em;

    &:not(:disabled) {
        &:active, &:focus {
            @include focused;
        }

        &:hover {
            background-color: $hover-button-bg-color;
        }
    }
}

@mixin input-border-like {
    border: 2px solid;
    border-radius: 4px;
    border-color: $input-border-color;
}

@mixin input-like {
    @include input-border-like;
    // see https://stackoverflow.com/questions/23211656/remove-ios-input-shadow
    background-clip: padding-box !important;

    padding: 0.4em 0.4em;
}
//

* {
    box-sizing: border-box;
}

html, body {
    margin: 0;
    padding: 0;
    width: 100%;
}

body {
    font-family: $font-default;
    @include dq-common.default-text;
}

@include dq-common.links;

.header {
    @include dq-common.header-with-logo;
}

$text-side-padding: 0.8rem;
.generic-content {
    padding: 0 $text-side-padding;
    line-height: dq-common.$line-height-long-text;
}

.main {
    h1 {
        margin-top: 1.5rem;
        background-color: dq-common.$body-color;
        color: $header-color;
        width: 100%;
        text-align: center;
        padding: 0.4em 0;
    }
}

.footer {
    margin-top: 3rem;
    padding-top: 1rem;
    background-color: dq-common.$footer-bg-color;
    line-height: dq-common.$line-height-long-text;

    flex-wrap: wrap;

    .footer-section {
        flex: 0 0 100%;
        padding: 0 $text-side-padding;
        margin-bottom: 2em;

        .title {
            margin: 0;
        }

        p {
            margin: 1em 0;
        }
    }
}

@keyframes pulse {
    to, from {
        transform: scale3d(1, 1, 1);
    }

    $scale-max: 1.05;
    50% {
        transform: scale3d($scale-max, $scale-max, $scale-max);
    }
}

.error-animation {
    animation: pulse 0.5s;
}

.call-to-action {
    background-color: $call-to-action-bg-color;
    margin: 0.5em auto;
    padding: 0.5em 1em;
    width: 95%;

    &.error {
        background-color: $error-call-to-action-bg-color;
    }
}

h1 {
    font-size: 1.4rem;
    margin: 0;
}

h3 {
    font-size: 1.05rem;
    margin: 1em 0 0.5em 0;
}

form {
    font-family: $font-sans;

    input[type=text], input[type=number], input[type=date], input[type=email] {
        @include input-like;
    }

    input {
        &:focus {
            @include focused;
        }

        &.invalid:focus {
            @include focused-invalid;
        }
    }

    button {
        @include button-like;

        &.small {
            padding: 0.4em;
        }
    }
}

.email-form {
    .long-text {
        font-family: $font-default;
    }

    .email-container {
        display: flex;
        flex-direction: row;
        // TODO: We use auto margins instead of "justify-content: safe center;" until wider browser support.
        // justify-content: center;

        margin: 0.4rem 0;

        input {
            margin: auto;
            margin-right: 0.2rem;
            min-width: 9.5rem;
            align-self: center;
        }

        button[type=submit] {
            margin: auto;
            margin-left: 0.2rem;
            min-width: 6rem;

            $_col: #9DD1F1;
            background-color: $_col;

            &:not(:disabled):hover {
                background-color: color.scale($_col, $lightness: -25%);
            }

            padding: 0.4rem 0.4rem;
        }
    }

    .feedback {
        align-self: center;
        font-weight: bold;
        margin-bottom: 0.5rem;
    }

    aside {
        font-style: italic;
        font-size: 0.8rem;

        h4{
            margin: 0;
        }
        p {
            margin: 0;
            margin: 0.2rem 0;
        }
    }
}

.contract-form {
    > fieldset {
        margin: 0;
        margin: {
            top: 2em;
            bottom: 1em;
        }
        padding: 0;
        padding-bottom: 1em;
        border: 0;

        background-color: $form-part-bg-color;

        & > legend {
            width: 100%;
            padding: 0.6em 0em;
            padding-inline-start: 0;
            padding-inline-end: 0;
            font-weight: bold;
            font-size: 1.05rem;
            background-color: $form-legend-bg-color;
            text-align: center;
            margin-bottom: 0.6em;

            & + .call-to-action {
                margin-top: 0;
            }
        }
    }

    $margin-between-label-field: 0.2em;

    label {
        & + input, & + .input-wrapper {
            margin-top: $margin-between-label-field;
        }
    }

    button.form-submit {
        @include button-like;
        margin: 1em 0;
        -webkit-appearance: none;

        height: 3em;
        min-width: 12em;

        justify-content: center;
        align-items: center;

        padding: 0.5em 1em;
        align-self: center;
        background-color: $submit-button-bg-color;

        &:not(:disabled):hover {
            background-color: $hover-submit-button-bg-color;
        }
    }

    $leading-field-margin: 0.6em;
    $margin-below-each-input-group: 1em;

    .single-form-input-group {
        display: flex;
        flex-direction: column;
        width: 90%;
        margin-bottom: $margin-below-each-input-group;
        margin-left: $leading-field-margin;
    }

    .error-feedback {
        display: flex;

        &::before {
            content: "";
            padding: 1em 0.4em;
            background-color: $error-feedback-accent-color;
            margin-right: 0.2em;
        }
        color: $error-feedback-color;
        margin-top: 0.4em;

        div {
            align-self: center;
        }
    }

    fieldset.nested {
        padding: 0;
        border: 0;

        legend {
            margin-bottom: $margin-between-label-field;
        }

        .radio-input-option {
            margin-left: 1em;
        }

        .radio-input-option + .radio-input-option {
            margin-top: 1em;
        }
    }

    .input-prefix {
        @include input-like;
        padding: 0;
        background-color: $custom-input-bg-color;
        & > span {
            margin: 0 0.6em;
        }
        align-items: center;
        font-weight: bold;
        & > input {
            border: 0;
            width: 100%;
        }
    }

    .date-range-input {
        .single-form-input-group {
            margin-bottom: unset;
        }

        .period {
            margin: {
                bottom: 0.8em;
            }

            label {
                flex: 2 0 30%;
                margin-left: 8%;
                align-self: flex-end;
            }

            input {
                flex: 0 0 49%;
                margin: 0;
                margin-left: 0.5%;
                margin-right: 0.5%;
                max-width: 49%;
                width: 49%;
            }

            .remove-period {
                flex: 0 0;
                max-width: 25%;
                line-height: 100%;

                min-width: 2.5rem;
                min-height: 2.2rem;
            }
        }

        button {
            align-self: flex-end;
        }
    }

    .signature-pad-label-container {
        margin-top: 1em;
        align-items: center;
        justify-content: space-around;

        label {
            margin: 0;
        }

        button {
            // Used to disable annoying selection that occured with signature <canvas>
            user-select: none;
            -webkit-user-select: none;
        }
    }

    .signature-pad-container {
        margin-top: 2em;
        justify-content: center;
        // Used to disable annoying selection that occured with signature <canvas>
        user-select: none;
        -webkit-user-select: none;

        .signature-pad {
            @include input-border-like;
            background-color: $custom-input-bg-color;
            width: 70%;
            height: 10em;
            padding: 0.1em;

            // Used to disable annoying selection that occured with signature <canvas>
            user-select: none;
            -webkit-user-select: none;
        }
    }

    .existing-profiles {
        justify-content: space-between;

        .profile-wrapper {
            justify-content: space-between;
            margin-top: 0.4em;

            .profile-option {
                padding: 0.1rem 0.3rem;
                margin-right: 1rem;

                &:hover {
                    background-color: $hover-split-button-bg-color;
                }

                &:focus {
                    @include focused;
                }
                flex: 1 1 90%;

                align-items: center;
                justify-content: space-around;

                .profile-name {
                    text-align: left;
                    min-width: 50%;
                }
                .profile-rpps {
                    font-size: 75%;
                    text-align: center;
                }
            }

            .remove-profile {
                flex: 0 0 auto;

                $min_trash_size: 2.2rem;
                min-width: $min_trash_size + 1rem;
                min-height: $min_trash_size;
            }
        }
    }
}

// SVG background-images
.icon-svg-parent {
    position: relative;
}
.icon-svg-trash {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    content: url('../img/trash.svg');
    // This filter changes our SVG to (a close approximation of) $error-feedback-color.
    filter: brightness(0) saturate(100%) invert(26%) sepia(61%) saturate(4041%) hue-rotate(353deg) brightness(80%) contrast(95%);
}

hr {
    width: 50%;
    margin: 2.5rem auto;
    border: none;
    border-top: 1px solid color.change(black, $alpha: 0.5);;
}

.spinner {
    $size: 1.5em;
    width: $size;
    height: $size;

    margin-left: 1em;

    // Pertaining to the animation.
    border: 0.25rem solid $submit-button-spinner-color;
    border-right-color: transparent;
    border-radius: 50%;
    animation: spinner-border .75s linear infinite;

    @keyframes spinner-border {
        0% {
            transform: rotate(0deg);
        } 100% {
            transform: rotate(360deg);
        }
      }
}

.autocomplete-parent {
    position: relative;
    display: block;

    & > * {
        width: 100%;
    };
}

.autocomplete-list {
    background-color: $autocomplete-bg-color;
    box-shadow: $generic-front-box-shadow;
    border: 1px solid black;

    position: absolute;
    width: 100%;
    display: flex;

    // Avoid the user being able to select the autocomplete possibilites.
    user-select: none;
    cursor: default;

    ul {
        margin: 0;
        padding: 0;
        width: 100%;
        list-style-type: none;

        display: flex;
        flex-direction: column;

        li {
            margin: 0;
            padding: 0.4em 0.2em;

            &:hover, &:active, &:focus {
                background-color: $highlight-autocomplete-bg-color;
            }
            &:focus {
                @include focused;
            }
        }
    }
}

.sticky-global-error {
    position: sticky;
    top: 0px;
    z-index: 1; // to cover other elements with "position: relative"

    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: $error-call-to-action-bg-color;
    box-shadow: $generic-front-box-shadow;

    padding: 0.25em 0.25em;

    h3 {
        margin-top: 0;
    }

    p {
        margin: 0;
        margin-bottom: 1em;
    }

    button {
        min-width: 50%;
        flex: 1 0 auto;

        // TODO: use class instead of "button" to differentiate our buttons from dependencies.
        @include button-like;
        &.small {
            padding: 0.4em;
        }
    }
}

// For larger displays such as desktop.
@import 'media.scss';
